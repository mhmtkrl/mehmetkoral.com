

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 22:22:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0008                     _PORTD	set	8
   167  0008                     _PORTDbits	set	8
   168  000B                     _INTCONbits	set	11
   169  0088                     _TRISD	set	136
   170  0081                     _OPTION_REGbits	set	129
   171                           
   172                           	psect	cinit
   173  000F                     start_initialization:	
   174                           ; #config settings
   175                           
   176  000F                     __initialization:
   177  000F                     end_of_initialization:	
   178                           ;End of C runtime variable initialization code
   179                           
   180  000F                     __end_of__initialization:
   181  000F  0183               	clrf	3
   182  0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   183                           
   184                           	psect	cstackCOMMON
   185  0070                     __pcstackCOMMON:
   186  0070                     ?_my_isr_routine:
   187  0070                     ??_my_isr_routine:	
   188                           ; 1 bytes @ 0x0
   189                           
   190  0070                     ?_main:	
   191                           ; 1 bytes @ 0x0
   192                           
   193                           
   194                           ; 1 bytes @ 0x0
   195  0070                     	ds	2
   196  0072                     ??_main:
   197                           
   198                           ; 1 bytes @ 0x2
   199  0072                     	ds	3
   200                           
   201                           	psect	maintext
   202  0013                     __pmaintext:	
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 25 in file "main.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2
   217 ;; Tracked objects:
   218 ;;		On entry : B00/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   222 ;;      Params:         0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0
   224 ;;      Temps:          3       0       0       0       0
   225 ;;      Totals:         3       0       0       0       0
   226 ;;Total ram usage:        3 bytes
   227 ;; Hardware stack levels required when called:    1
   228 ;; This function calls:
   229 ;;		Nothing
   230 ;; This function is called by:
   231 ;;		Startup code after reset
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           
   236                           ;psect for function _main
   237  0013                     _main:
   238  0013                     l624:	
   239                           ;incstack = 0
   240                           ; Regs used in _main: [wreg+status,2]
   241                           
   242                           
   243                           ;main.c: 26:     OPTION_REGbits.nRBPU = 0;
   244  0013  1683               	bsf	3,5	;RP0=1, select bank1
   245  0014  1303               	bcf	3,6	;RP1=0, select bank1
   246  0015  1381               	bcf	1,7	;volatile
   247                           
   248                           ;main.c: 27:     OPTION_REGbits.INTEDG = 1;
   249  0016  1701               	bsf	1,6	;volatile
   250                           
   251                           ;main.c: 28:     INTCONbits.INTE = 1;
   252  0017  160B               	bsf	11,4	;volatile
   253                           
   254                           ;main.c: 29:     INTCONbits.GIE = 1;
   255  0018  178B               	bsf	11,7	;volatile
   256  0019                     l626:
   257                           
   258                           ;main.c: 31:     TRISD = 0xFC;
   259  0019  30FC               	movlw	252
   260  001A  0088               	movwf	8	;volatile
   261  001B                     l628:
   262                           
   263                           ;main.c: 32:     PORTD = 0x00;
   264  001B  1283               	bcf	3,5	;RP0=0, select bank0
   265  001C  1303               	bcf	3,6	;RP1=0, select bank0
   266  001D  0188               	clrf	8	;volatile
   267  001E                     l630:
   268                           
   269                           ;main.c: 35:         if(PORTDbits.RD2) {
   270  001E  1283               	bcf	3,5	;RP0=0, select bank0
   271  001F  1303               	bcf	3,6	;RP1=0, select bank0
   272  0020  1D08               	btfss	8,2	;volatile
   273  0021  2823               	goto	u21
   274  0022  2824               	goto	u20
   275  0023                     u21:
   276  0023  2835               	goto	l24
   277  0024                     u20:
   278  0024                     l632:
   279                           
   280                           ;main.c: 36:             _delay((unsigned long)((100)*(20000000/4000.0)));
   281  0024  3003               	movlw	3
   282  0025  00F4               	movwf	??_main+2
   283  0026  308A               	movlw	138
   284  0027  00F3               	movwf	??_main+1
   285  0028  3055               	movlw	85
   286  0029  00F2               	movwf	??_main
   287  002A                     u37:
   288  002A  0BF2               	decfsz	??_main,f
   289  002B  282A               	goto	u37
   290  002C  0BF3               	decfsz	??_main+1,f
   291  002D  282A               	goto	u37
   292  002E  0BF4               	decfsz	??_main+2,f
   293  002F  282A               	goto	u37
   294  0030  2831               	nop2
   295  0031                     l634:
   296                           
   297                           ;main.c: 37:             PORTDbits.RD0 = 1;
   298  0031  1283               	bcf	3,5	;RP0=0, select bank0
   299  0032  1303               	bcf	3,6	;RP1=0, select bank0
   300  0033  1408               	bsf	8,0	;volatile
   301                           
   302                           ;main.c: 38:         }
   303  0034  2836               	goto	l25
   304  0035                     l24:	
   305                           ;main.c: 39:         else {
   306                           
   307                           
   308                           ;main.c: 40:             PORTDbits.RD0 = 0;
   309  0035  1008               	bcf	8,0	;volatile
   310  0036                     l25:	
   311                           ;main.c: 41:         }
   312                           
   313                           
   314                           ;main.c: 42:         PORTDbits.RD1 = 1;
   315  0036  1488               	bsf	8,1	;volatile
   316  0037                     l636:
   317                           
   318                           ;main.c: 43:         _delay((unsigned long)((2000)*(20000000/4000.0)));
   319  0037  3033               	movlw	51
   320  0038  00F4               	movwf	??_main+2
   321  0039  30BB               	movlw	187
   322  003A  00F3               	movwf	??_main+1
   323  003B  30DF               	movlw	223
   324  003C  00F2               	movwf	??_main
   325  003D                     u47:
   326  003D  0BF2               	decfsz	??_main,f
   327  003E  283D               	goto	u47
   328  003F  0BF3               	decfsz	??_main+1,f
   329  0040  283D               	goto	u47
   330  0041  0BF4               	decfsz	??_main+2,f
   331  0042  283D               	goto	u47
   332  0043  2844               	nop2
   333  0044                     l638:
   334                           
   335                           ;main.c: 44:         PORTDbits.RD1 = 0;
   336  0044  1283               	bcf	3,5	;RP0=0, select bank0
   337  0045  1303               	bcf	3,6	;RP1=0, select bank0
   338  0046  1088               	bcf	8,1	;volatile
   339                           
   340                           ;main.c: 45:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   341  0047  301A               	movlw	26
   342  0048  00F4               	movwf	??_main+2
   343  0049  305E               	movlw	94
   344  004A  00F3               	movwf	??_main+1
   345  004B  306E               	movlw	110
   346  004C  00F2               	movwf	??_main
   347  004D                     u57:
   348  004D  0BF2               	decfsz	??_main,f
   349  004E  284D               	goto	u57
   350  004F  0BF3               	decfsz	??_main+1,f
   351  0050  284D               	goto	u57
   352  0051  0BF4               	decfsz	??_main+2,f
   353  0052  284D               	goto	u57
   354  0053  0000               	nop
   355  0054  281E               	goto	l630
   356  0055  120A  118A  280C   	ljmp	start
   357  0058                     __end_of_main:
   358                           
   359                           	psect	text1
   360  0058                     __ptext1:	
   361 ;; *************** function _my_isr_routine *****************
   362 ;; Defined at:
   363 ;;		line 18 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		None
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0
   379 ;;      Temps:          2       0       0       0       0
   380 ;;      Totals:         2       0       0       0       0
   381 ;;Total ram usage:        2 bytes
   382 ;; Hardware stack levels used:    1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		Interrupt level 1
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _my_isr_routine
   392  0058                     _my_isr_routine:
   393  0058                     i1l620:
   394                           
   395                           ;main.c: 19:     if(INTCONbits.INTF) {
   396  0058  1C8B               	btfss	11,1	;volatile
   397  0059  285B               	goto	u1_21
   398  005A  285C               	goto	u1_20
   399  005B                     u1_21:
   400  005B  2860               	goto	i1l18
   401  005C                     u1_20:
   402  005C                     i1l622:
   403                           
   404                           ;main.c: 20:         PORTDbits.RD0 = 1;
   405  005C  1283               	bcf	3,5	;RP0=0, select bank0
   406  005D  1303               	bcf	3,6	;RP1=0, select bank0
   407  005E  1408               	bsf	8,0	;volatile
   408                           
   409                           ;main.c: 21:         INTCONbits.INTF = 0;
   410  005F  108B               	bcf	11,1	;volatile
   411  0060                     i1l18:
   412  0060  0871               	movf	??_my_isr_routine+1,w
   413  0061  008A               	movwf	10
   414  0062  0E70               	swapf	??_my_isr_routine,w
   415  0063  0083               	movwf	3
   416  0064  0EFE               	swapf	btemp,f
   417  0065  0E7E               	swapf	btemp,w
   418  0066  0009               	retfie
   419  0067                     __end_of_my_isr_routine:
   420  007E                     btemp	set	126	;btemp
   421  007E                     wtemp0	set	126
   422                           
   423                           	psect	intentry
   424  0004                     __pintentry:	
   425                           ;incstack = 0
   426                           ; Regs used in _my_isr_routine: []
   427                           
   428  0004                     interrupt_function:
   429  007E                     saved_w	set	btemp
   430  0004  00FE               	movwf	btemp
   431  0005  0E03               	swapf	3,w
   432  0006  00F0               	movwf	??_my_isr_routine
   433  0007  080A               	movf	10,w
   434  0008  00F1               	movwf	??_my_isr_routine+1
   435  0009  120A  118A  2858   	ljmp	_my_isr_routine
   436                           
   437                           	psect	config
   438                           
   439                           ;Config register CONFIG @ 0x2007
   440                           ;	Oscillator Selection bits
   441                           ;	FOSC = HS, HS oscillator
   442                           ;	Watchdog Timer Enable bit
   443                           ;	WDTE = OFF, WDT disabled
   444                           ;	Power-up Timer Enable bit
   445                           ;	PWRTE = OFF, PWRT disabled
   446                           ;	Brown-out Reset Enable bit
   447                           ;	BOREN = OFF, BOR disabled
   448                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   449                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   450                           ;	Data EEPROM Memory Code Protection bit
   451                           ;	CPD = OFF, Data EEPROM code protection off
   452                           ;	Flash Program Memory Write Enable bits
   453                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   454                           ;	In-Circuit Debugger Mode bit
   455                           ;	DEBUG = 0x1, unprogrammed default
   456                           ;	Flash Program Memory Code Protection bit
   457                           ;	CP = OFF, Code protection off
   458  2007                     	org	8199
   459  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr_routine                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 22:22:54 2021

                     l24 0035                       l25 0036                       u20 0024  
                     u21 0023                       u37 002A                       u47 003D  
                     u57 004D                      l630 001E                      l632 0024  
                    l624 0013                      l634 0031                      l626 0019  
                    l636 0037                      l628 001B                      l638 0044  
                   i1l18 0060                     u1_20 005C                     u1_21 005B  
                   _main 0013                     btemp 007E                     start 000C  
                  ?_main 0070                    i1l620 0058                    i1l622 005C  
                  _PORTD 0008                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0058                   ??_main 0072                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070           _OPTION_REGbits 0081  
             __pmaintext 0013               __pintentry 0004  __size_of_my_isr_routine 000F  
                __ptext1 0058     end_of_initialization 000F                _PORTDbits 0008  
    start_initialization 000F           _my_isr_routine 0058                ___latbits 0002  
 __end_of_my_isr_routine 0067          ?_my_isr_routine 0070        interrupt_function 0004  
          __size_of_main 0045               _INTCONbits 000B                 intlevel1 0000  
       ??_my_isr_routine 0070  
