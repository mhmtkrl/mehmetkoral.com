

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jan 29 00:15:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  0078                     __pidataBANK0:
   173                           
   174                           ;initializer for _txt
   175  0078  340D               	retlw	13
   176  0079  340A               	retlw	10
   177  007A  3445               	retlw	69
   178  007B  346D               	retlw	109
   179  007C  3462               	retlw	98
   180  007D  3465               	retlw	101
   181  007E  3464               	retlw	100
   182  007F  3464               	retlw	100
   183  0080  3465               	retlw	101
   184  0081  3464               	retlw	100
   185  0082  3420               	retlw	32
   186  0083  3453               	retlw	83
   187  0084  3479               	retlw	121
   188  0085  3473               	retlw	115
   189  0086  3474               	retlw	116
   190  0087  3465               	retlw	101
   191  0088  346D               	retlw	109
   192  0089  3473               	retlw	115
   193  008A  3421               	retlw	33
   194  008B  3400               	retlw	0
   195  0008                     _PORTD	set	8
   196  000B                     _INTCONbits	set	11
   197  0018                     _RCSTAbits	set	24
   198  0019                     _TXREG	set	25
   199  001A                     _RCREG	set	26
   200  000C                     _PIR1bits	set	12
   201  0088                     _TRISD	set	136
   202  008C                     _PIE1bits	set	140
   203  0098                     _TXSTAbits	set	152
   204  0099                     _SPBRG	set	153
   205  0087                     _TRISC	set	135
   206                           
   207                           	psect	cinit
   208  000F                     start_initialization:	
   209                           ; #config settings
   210                           
   211  000F                     __initialization:
   212                           
   213                           ; Initialize objects allocated to BANK0
   214  000F  1383               	bcf	3,7	;select IRP bank0
   215  0010  3034               	movlw	low (__pdataBANK0+20)
   216  0011  00FD               	movwf	btemp+-1
   217  0012  3000               	movlw	high __pidataBANK0
   218  0013  00FE               	movwf	btemp
   219  0014  3078               	movlw	low __pidataBANK0
   220  0015  00FF               	movwf	btemp+1
   221  0016  3020               	movlw	low __pdataBANK0
   222  0017  0084               	movwf	4
   223  0018  120A  118A  2090  120A  118A  	fcall	init_ram0
   224                           
   225                           ; Clear objects allocated to COMMON
   226  001D  01F5               	clrf	__pbssCOMMON& (0+127)
   227  001E                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  001E                     __end_of__initialization:
   231  001E  0183               	clrf	3
   232  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMMON
   235  0075                     __pbssCOMMON:
   236  0075                     _data:
   237  0075                     	ds	1
   238                           
   239                           	psect	dataBANK0
   240  0020                     __pdataBANK0:
   241  0020                     _txt:
   242  0020                     	ds	20
   243                           
   244                           	psect	inittext
   245  008C                     init_fetch0:	
   246                           ;	Called with low address in FSR and high address in W
   247                           
   248  008C  087E               	movf	btemp,w
   249  008D  008A               	movwf	10
   250  008E  087F               	movf	btemp+1,w
   251  008F  0082               	movwf	2
   252  0090                     init_ram0:	
   253                           ;Called with:
   254                           ;	high address of idata address in btemp 
   255                           ;	low address of idata address in btemp+1 
   256                           ;	low address of data in FSR
   257                           ;	high address + 1 of data in btemp-1
   258                           
   259  0090  120A  118A  208C  120A  118A  	fcall	init_fetch0
   260  0095  0080               	movwf	0
   261  0096  0A84               	incf	4,f
   262  0097  0804               	movf	4,w
   263  0098  067D               	xorwf	btemp+-1,w
   264  0099  1903               	btfsc	3,2
   265  009A  3400               	retlw	0
   266  009B  0AFF               	incf	btemp+1,f
   267  009C  1903               	btfsc	3,2
   268  009D  0AFE               	incf	btemp,f
   269  009E  2890               	goto	init_ram0
   270                           
   271                           	psect	cstackCOMMON
   272  0070                     __pcstackCOMMON:
   273  0070                     ?_my_isr:
   274  0070                     ??_my_isr:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_main:	
   278                           ; 1 bytes @ 0x0
   279                           
   280                           
   281                           ; 1 bytes @ 0x0
   282  0070                     	ds	3
   283  0073                     ??_main:
   284  0073                     main@k:	
   285                           ; 1 bytes @ 0x3
   286                           
   287                           
   288                           ; 2 bytes @ 0x3
   289  0073                     	ds	2
   290                           
   291                           	psect	maintext
   292  0022                     __pmaintext:	
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 26 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;  k               2    3[COMMON] int 
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   307 ;; Tracked objects:
   308 ;;		On entry : B00/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   312 ;;      Params:         0       0       0       0       0
   313 ;;      Locals:         2       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0
   315 ;;      Totals:         2       0       0       0       0
   316 ;;Total ram usage:        2 bytes
   317 ;; Hardware stack levels required when called:    1
   318 ;; This function calls:
   319 ;;		Nothing
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _main
   327  0022                     _main:
   328  0022                     l644:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   331                           
   332                           
   333                           ;main.c: 28:     TRISC = 0xFF;
   334  0022  30FF               	movlw	255
   335  0023  1683               	bsf	3,5	;RP0=1, select bank1
   336  0024  1303               	bcf	3,6	;RP1=0, select bank1
   337  0025  0087               	movwf	7	;volatile
   338                           
   339                           ;main.c: 30:     SPBRG = 20;
   340  0026  3014               	movlw	20
   341  0027  0099               	movwf	25	;volatile
   342  0028                     l646:
   343                           
   344                           ;main.c: 33:     TXSTAbits.BRGH = 1;
   345  0028  1518               	bsf	24,2	;volatile
   346  0029                     l648:
   347                           
   348                           ;main.c: 34:     TXSTAbits.SYNC = 0;
   349  0029  1218               	bcf	24,4	;volatile
   350  002A                     l650:
   351                           
   352                           ;main.c: 35:     RCSTAbits.SPEN = 1;
   353  002A  1283               	bcf	3,5	;RP0=0, select bank0
   354  002B  1303               	bcf	3,6	;RP1=0, select bank0
   355  002C  1798               	bsf	24,7	;volatile
   356  002D                     l652:
   357                           
   358                           ;main.c: 36:     PIE1bits.TXIE = 0;
   359  002D  1683               	bsf	3,5	;RP0=1, select bank1
   360  002E  1303               	bcf	3,6	;RP1=0, select bank1
   361  002F  120C               	bcf	12,4	;volatile
   362  0030                     l654:
   363                           
   364                           ;main.c: 37:     TXSTAbits.TX9 = 0;
   365  0030  1318               	bcf	24,6	;volatile
   366  0031                     l656:
   367                           
   368                           ;main.c: 38:     TXSTAbits.TXEN = 1;
   369  0031  1698               	bsf	24,5	;volatile
   370  0032                     l658:
   371                           
   372                           ;main.c: 41:     RCSTAbits.RX9 = 0;
   373  0032  1283               	bcf	3,5	;RP0=0, select bank0
   374  0033  1303               	bcf	3,6	;RP1=0, select bank0
   375  0034  1318               	bcf	24,6	;volatile
   376  0035                     l660:
   377                           
   378                           ;main.c: 42:     RCSTAbits.CREN = 1;
   379  0035  1618               	bsf	24,4	;volatile
   380  0036                     l662:
   381                           
   382                           ;main.c: 43:     PIE1bits.RCIE = 1;
   383  0036  1683               	bsf	3,5	;RP0=1, select bank1
   384  0037  1303               	bcf	3,6	;RP1=0, select bank1
   385  0038  168C               	bsf	12,5	;volatile
   386  0039                     l664:
   387                           
   388                           ;main.c: 46:     INTCONbits.PEIE = 1;
   389  0039  170B               	bsf	11,6	;volatile
   390  003A                     l666:
   391                           
   392                           ;main.c: 47:     INTCONbits.GIE = 1;
   393  003A  178B               	bsf	11,7	;volatile
   394                           
   395                           ;main.c: 49:     TRISD = 0xFC;
   396  003B  30FC               	movlw	252
   397  003C  0088               	movwf	8	;volatile
   398  003D                     l668:
   399                           
   400                           ;main.c: 50:     PORTD = 0x00;
   401  003D  1283               	bcf	3,5	;RP0=0, select bank0
   402  003E  1303               	bcf	3,6	;RP1=0, select bank0
   403  003F  0188               	clrf	8	;volatile
   404  0040                     l670:
   405                           
   406                           ;main.c: 52:     int k;;main.c: 53:     for(k = 0; txt[k] != '\0' ; k++) {
   407  0040  01F3               	clrf	main@k
   408  0041  01F4               	clrf	main@k+1
   409  0042  2857               	goto	l676
   410  0043                     l39:
   411  0043  1683               	bsf	3,5	;RP0=1, select bank1
   412  0044  1303               	bcf	3,6	;RP1=0, select bank1
   413  0045  1C98               	btfss	24,1	;volatile
   414  0046  2848               	goto	u21
   415  0047  2849               	goto	u20
   416  0048                     u21:
   417  0048  2843               	goto	l39
   418  0049                     u20:
   419  0049                     l672:
   420                           
   421                           ;main.c: 56:         TXREG = txt[k];
   422  0049  0873               	movf	main@k,w
   423  004A  3E20               	addlw	(low (_txt| 0))& (0+255)
   424  004B  0084               	movwf	4
   425  004C  1383               	bcf	3,7	;select IRP bank0
   426  004D  0800               	movf	0,w
   427  004E  1283               	bcf	3,5	;RP0=0, select bank0
   428  004F  1303               	bcf	3,6	;RP1=0, select bank0
   429  0050  0099               	movwf	25	;volatile
   430  0051                     l674:
   431                           
   432                           ;main.c: 57:     }
   433  0051  3001               	movlw	1
   434  0052  07F3               	addwf	main@k,f
   435  0053  1803               	skipnc
   436  0054  0AF4               	incf	main@k+1,f
   437  0055  3000               	movlw	0
   438  0056  07F4               	addwf	main@k+1,f
   439  0057                     l676:
   440  0057  0873               	movf	main@k,w
   441  0058  3E20               	addlw	(low (_txt| 0))& (0+255)
   442  0059  0084               	movwf	4
   443  005A  1383               	bcf	3,7	;select IRP bank0
   444  005B  0800               	movf	0,w
   445  005C  1D03               	btfss	3,2
   446  005D  285F               	goto	u31
   447  005E  2860               	goto	u30
   448  005F                     u31:
   449  005F  2843               	goto	l39
   450  0060                     u30:
   451  0060                     l678:
   452                           
   453                           ;main.c: 60:         if(data == 'r') PORTD = 0x01;
   454  0060  3072               	movlw	114
   455  0061  0675               	xorwf	_data,w
   456  0062  1D03               	btfss	3,2
   457  0063  2865               	goto	u41
   458  0064  2866               	goto	u40
   459  0065                     u41:
   460  0065  286A               	goto	l682
   461  0066                     u40:
   462  0066                     l680:
   463  0066  3001               	movlw	1
   464  0067  1283               	bcf	3,5	;RP0=0, select bank0
   465  0068  1303               	bcf	3,6	;RP1=0, select bank0
   466  0069  0088               	movwf	8	;volatile
   467  006A                     l682:
   468                           
   469                           ;main.c: 61:         if(data == 'y') PORTD = 0x02;
   470  006A  3079               	movlw	121
   471  006B  0675               	xorwf	_data,w
   472  006C  1D03               	btfss	3,2
   473  006D  286F               	goto	u51
   474  006E  2870               	goto	u50
   475  006F                     u51:
   476  006F  2860               	goto	l678
   477  0070                     u50:
   478  0070                     l684:
   479  0070  3002               	movlw	2
   480  0071  1283               	bcf	3,5	;RP0=0, select bank0
   481  0072  1303               	bcf	3,6	;RP1=0, select bank0
   482  0073  0088               	movwf	8	;volatile
   483  0074  2860               	goto	l678
   484  0075  120A  118A  280C   	ljmp	start
   485  0078                     __end_of_main:
   486                           
   487                           	psect	text1
   488  009F                     __ptext1:	
   489 ;; *************** function _my_isr *****************
   490 ;; Defined at:
   491 ;;		line 17 in file "main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          3       0       0       0       0
   508 ;;      Totals:         3       0       0       0       0
   509 ;;Total ram usage:        3 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		Interrupt level 1
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _my_isr
   520  009F                     _my_isr:
   521  009F                     i1l640:
   522                           
   523                           ;main.c: 20:     if(PIR1bits.RCIF) {
   524  009F  1283               	bcf	3,5	;RP0=0, select bank0
   525  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   526  00A1  1E8C               	btfss	12,5	;volatile
   527  00A2  28A4               	goto	u1_21
   528  00A3  28A5               	goto	u1_20
   529  00A4                     u1_21:
   530  00A4  28AB               	goto	i1l32
   531  00A5                     u1_20:
   532  00A5                     i1l642:
   533                           
   534                           ;main.c: 21:         data = RCREG;
   535  00A5  081A               	movf	26,w	;volatile
   536  00A6  00F0               	movwf	??_my_isr
   537  00A7  0870               	movf	??_my_isr,w
   538  00A8  00F5               	movwf	_data
   539                           
   540                           ;main.c: 22:         TXREG = data;
   541  00A9  0875               	movf	_data,w
   542  00AA  0099               	movwf	25	;volatile
   543  00AB                     i1l32:
   544  00AB  0872               	movf	??_my_isr+2,w
   545  00AC  008A               	movwf	10
   546  00AD  0E71               	swapf	??_my_isr+1,w
   547  00AE  0083               	movwf	3
   548  00AF  0EFE               	swapf	btemp,f
   549  00B0  0E7E               	swapf	btemp,w
   550  00B1  0009               	retfie
   551  00B2                     __end_of_my_isr:
   552  007E                     btemp	set	126	;btemp
   553  007E                     wtemp0	set	126
   554                           
   555                           	psect	intentry
   556  0004                     __pintentry:	
   557                           ;incstack = 0
   558                           ; Regs used in _my_isr: [wreg]
   559                           
   560  0004                     interrupt_function:
   561  007E                     saved_w	set	btemp
   562  0004  00FE               	movwf	btemp
   563  0005  0E03               	swapf	3,w
   564  0006  00F1               	movwf	??_my_isr+1
   565  0007  080A               	movf	10,w
   566  0008  00F2               	movwf	??_my_isr+2
   567  0009  120A  118A  289F   	ljmp	_my_isr
   568                           
   569                           	psect	config
   570                           
   571                           ;Config register CONFIG @ 0x2007
   572                           ;	Oscillator Selection bits
   573                           ;	FOSC = HS, HS oscillator
   574                           ;	Watchdog Timer Enable bit
   575                           ;	WDTE = OFF, WDT disabled
   576                           ;	Power-up Timer Enable bit
   577                           ;	PWRTE = OFF, PWRT disabled
   578                           ;	Brown-out Reset Enable bit
   579                           ;	BOREN = OFF, BOR disabled
   580                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   581                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   582                           ;	Data EEPROM Memory Code Protection bit
   583                           ;	CPD = OFF, Data EEPROM code protection off
   584                           ;	Flash Program Memory Write Enable bits
   585                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   586                           ;	In-Circuit Debugger Mode bit
   587                           ;	DEBUG = 0x1, unprogrammed default
   588                           ;	Flash Program Memory Code Protection bit
   589                           ;	CP = OFF, Code protection off
   590  2007                     	org	8199
   591  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr                                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jan 29 00:15:08 2021

                      pc 0002                       l39 0043                       u20 0049  
                     u21 0048                       u30 0060                       u31 005F  
                     u40 0066                       u41 0065                       u50 0070  
                     u51 006F                       fsr 0004                      l650 002A  
                    l660 0035                      l652 002D                      l644 0022  
                    l670 0040                      l662 0036                      l654 0030  
                    l646 0028                      l680 0066                      l672 0049  
                    l664 0039                      l656 0031                      l648 0029  
                    l682 006A                      l674 0051                      l666 003A  
                    l658 0032                      l684 0070                      l676 0057  
                    l668 003D                      l678 0060                      fsr0 0004  
                    _txt 0020                      indf 0000                     i1l32 00AB  
                   u1_20 00A5                     u1_21 00A4                     _data 0075  
                   _main 0022                     btemp 007E                     start 000C  
                  ?_main 0070                    i1l640 009F                    i1l642 00A5  
                  _RCREG 001A                    _SPBRG 0099                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088                    _TXREG 0019  
                  main@k 0073                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0078  
                 ??_main 0073                   _my_isr 009F                   saved_w 007E  
__end_of__initialization 001E           __pcstackCOMMON 0070             __pidataBANK0 0078  
             __pmaintext 0022               __pintentry 0004                  ?_my_isr 0070  
                __ptext1 009F          __size_of_my_isr 0013     end_of_initialization 001E  
              _RCSTAbits 0018                _TXSTAbits 0098           __end_of_my_isr 00B2  
    start_initialization 000F               init_fetch0 008C              __pdataBANK0 0020  
               ??_my_isr 0070              __pbssCOMMON 0075                ___latbits 0002  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
          __size_of_main 0056               _INTCONbits 000B                 init_ram0 0090  
               intlevel1 0000  
