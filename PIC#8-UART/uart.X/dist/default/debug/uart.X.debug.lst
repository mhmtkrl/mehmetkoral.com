

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 28 23:42:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  076D                     __pidataBANK0:
   173                           
   174                           ;initializer for _tx_data
   175  076D  340D               	retlw	13
   176  076E  340A               	retlw	10
   177  076F  3445               	retlw	69
   178  0770  346D               	retlw	109
   179  0771  3462               	retlw	98
   180  0772  3465               	retlw	101
   181  0773  3464               	retlw	100
   182  0774  3464               	retlw	100
   183  0775  3465               	retlw	101
   184  0776  3464               	retlw	100
   185  0777  3420               	retlw	32
   186  0778  3453               	retlw	83
   187  0779  3479               	retlw	121
   188  077A  3473               	retlw	115
   189  077B  3474               	retlw	116
   190  077C  3465               	retlw	101
   191  077D  346D               	retlw	109
   192  077E  3473               	retlw	115
   193  077F  3421               	retlw	33
   194  0780  3400               	retlw	0
   195  0008                     _PORTD	set	8
   196  000B                     _INTCONbits	set	11
   197  0018                     _RCSTAbits	set	24
   198  0019                     _TXREG	set	25
   199  001A                     _RCREG	set	26
   200  000C                     _PIR1bits	set	12
   201  0088                     _TRISD	set	136
   202  008C                     _PIE1bits	set	140
   203  0099                     _SPBRG	set	153
   204  0087                     _TRISC	set	135
   205  0098                     _TXSTAbits	set	152
   206                           
   207                           	psect	cinit
   208  07E9                     start_initialization:	
   209                           ; #config settings
   210                           
   211  07E9                     __initialization:
   212                           
   213                           ; Initialize objects allocated to BANK0
   214  07E9  1383               	bcf	3,7	;select IRP bank0
   215  07EA  3034               	movlw	low (__pdataBANK0+20)
   216  07EB  00FD               	movwf	btemp+-1
   217  07EC  3007               	movlw	high __pidataBANK0
   218  07ED  00FE               	movwf	btemp
   219  07EE  306D               	movlw	low __pidataBANK0
   220  07EF  00FF               	movwf	btemp+1
   221  07F0  3020               	movlw	low __pdataBANK0
   222  07F1  0084               	movwf	4
   223  07F2  120A  118A  275E  120A  118A  	fcall	init_ram0
   224                           
   225                           ; Clear objects allocated to COMMON
   226  07F7  01F1               	clrf	__pbssCOMMON& (0+127)
   227  07F8  01F2               	clrf	(__pbssCOMMON+1)& (0+127)
   228  07F9  01F3               	clrf	(__pbssCOMMON+2)& (0+127)
   229  07FA  01F4               	clrf	(__pbssCOMMON+3)& (0+127)
   230  07FB  01F5               	clrf	(__pbssCOMMON+4)& (0+127)
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2FB4   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239  0071                     __pbssCOMMON:
   240  0071                     _rx_data:
   241  0071                     	ds	3
   242  0074                     _i:
   243  0074                     	ds	2
   244                           
   245                           	psect	dataBANK0
   246  0020                     __pdataBANK0:
   247  0020                     _tx_data:
   248  0020                     	ds	20
   249                           
   250                           	psect	inittext
   251  075A                     init_fetch0:	
   252                           ;	Called with low address in FSR and high address in W
   253                           
   254  075A  087E               	movf	btemp,w
   255  075B  008A               	movwf	10
   256  075C  087F               	movf	btemp+1,w
   257  075D  0082               	movwf	2
   258  075E                     init_ram0:	
   259                           ;Called with:
   260                           ;	high address of idata address in btemp 
   261                           ;	low address of idata address in btemp+1 
   262                           ;	low address of data in FSR
   263                           ;	high address + 1 of data in btemp-1
   264                           
   265  075E  120A  118A  275A  120A  118A  	fcall	init_fetch0
   266  0763  0080               	movwf	0
   267  0764  0A84               	incf	4,f
   268  0765  0804               	movf	4,w
   269  0766  067D               	xorwf	btemp+-1,w
   270  0767  1903               	btfsc	3,2
   271  0768  3400               	retlw	0
   272  0769  0AFF               	incf	btemp+1,f
   273  076A  1903               	btfsc	3,2
   274  076B  0AFE               	incf	btemp,f
   275  076C  2F5E               	goto	init_ram0
   276                           
   277                           	psect	cstackCOMMON
   278  0076                     __pcstackCOMMON:
   279  0076                     ?_my_isr:
   280  0076                     ??_my_isr:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0076                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288  0076                     	ds	5
   289  007B                     ??_main:
   290                           
   291                           	psect	maintext
   292  07B4                     __pmaintext:	
   293                           ; 1 bytes @ 0x5
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 36 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels required when called:    1
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           
   327                           ;psect for function _main
   328  07B4                     _main:
   329  07B4                     l650:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg+status,2+status,0]
   332                           
   333                           
   334                           ;main.c: 37:     TRISC = 0xFF;
   335  07B4  30FF               	movlw	255
   336  07B5  1683               	bsf	3,5	;RP0=1, select bank1
   337  07B6  1303               	bcf	3,6	;RP1=0, select bank1
   338  07B7  0087               	movwf	7	;volatile
   339                           
   340                           ;main.c: 39:     SPBRG = 20;
   341  07B8  3014               	movlw	20
   342  07B9  0099               	movwf	25	;volatile
   343  07BA                     l652:
   344                           
   345                           ;main.c: 42:     TXSTAbits.BRGH = 1;
   346  07BA  1518               	bsf	24,2	;volatile
   347  07BB                     l654:
   348                           
   349                           ;main.c: 43:     TXSTAbits.SYNC = 0;
   350  07BB  1218               	bcf	24,4	;volatile
   351  07BC                     l656:
   352                           
   353                           ;main.c: 44:     RCSTAbits.SPEN = 1;
   354  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   355  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   356  07BE  1798               	bsf	24,7	;volatile
   357  07BF                     l658:
   358                           
   359                           ;main.c: 45:     PIE1bits.TXIE = 1;
   360  07BF  1683               	bsf	3,5	;RP0=1, select bank1
   361  07C0  1303               	bcf	3,6	;RP1=0, select bank1
   362  07C1  160C               	bsf	12,4	;volatile
   363  07C2                     l660:
   364                           
   365                           ;main.c: 46:     TXSTAbits.TX9 = 0;
   366  07C2  1318               	bcf	24,6	;volatile
   367  07C3                     l662:
   368                           
   369                           ;main.c: 47:     TXSTAbits.TXEN = 1;
   370  07C3  1698               	bsf	24,5	;volatile
   371  07C4                     l664:
   372                           
   373                           ;main.c: 50:     RCSTAbits.RX9 = 0;
   374  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   375  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   376  07C6  1318               	bcf	24,6	;volatile
   377  07C7                     l666:
   378                           
   379                           ;main.c: 51:     RCSTAbits.CREN = 1;
   380  07C7  1618               	bsf	24,4	;volatile
   381  07C8                     l668:
   382                           
   383                           ;main.c: 52:     PIE1bits.RCIE = 1;
   384  07C8  1683               	bsf	3,5	;RP0=1, select bank1
   385  07C9  1303               	bcf	3,6	;RP1=0, select bank1
   386  07CA  168C               	bsf	12,5	;volatile
   387  07CB                     l670:
   388                           
   389                           ;main.c: 55:     INTCONbits.PEIE = 1;
   390  07CB  170B               	bsf	11,6	;volatile
   391  07CC                     l672:
   392                           
   393                           ;main.c: 56:     INTCONbits.GIE = 1;
   394  07CC  178B               	bsf	11,7	;volatile
   395  07CD                     l674:
   396                           
   397                           ;main.c: 58:     TRISD = 0x00;
   398  07CD  0188               	clrf	8	;volatile
   399  07CE                     l676:
   400                           
   401                           ;main.c: 59:     PORTD = 0x00;
   402  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   403  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   404  07D0  0188               	clrf	8	;volatile
   405  07D1                     l678:
   406                           
   407                           ;main.c: 62:         if(rx_data[0] == 'r') PORTD = 0x01;
   408  07D1  3072               	movlw	114
   409  07D2  0671               	xorwf	_rx_data,w
   410  07D3  1D03               	btfss	3,2
   411  07D4  2FD6               	goto	u31
   412  07D5  2FD7               	goto	u30
   413  07D6                     u31:
   414  07D6  2FDB               	goto	l682
   415  07D7                     u30:
   416  07D7                     l680:
   417  07D7  3001               	movlw	1
   418  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   419  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   420  07DA  0088               	movwf	8	;volatile
   421  07DB                     l682:
   422                           
   423                           ;main.c: 63:         if(rx_data[0] == 'y') PORTD = 0x02;
   424  07DB  3079               	movlw	121
   425  07DC  0671               	xorwf	_rx_data,w
   426  07DD  1D03               	btfss	3,2
   427  07DE  2FE0               	goto	u41
   428  07DF  2FE1               	goto	u40
   429  07E0                     u41:
   430  07E0  2FD1               	goto	l678
   431  07E1                     u40:
   432  07E1                     l684:
   433  07E1  3002               	movlw	2
   434  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   435  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   436  07E4  0088               	movwf	8	;volatile
   437  07E5  2FD1               	goto	l678
   438  07E6  120A  118A  2812   	ljmp	start
   439  07E9                     __end_of_main:
   440                           
   441                           	psect	text1
   442  0781                     __ptext1:	
   443 ;; *************** function _my_isr *****************
   444 ;; Defined at:
   445 ;;		line 21 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0
   461 ;;      Temps:          5       0       0       0       0
   462 ;;      Totals:         5       0       0       0       0
   463 ;;Total ram usage:        5 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		Interrupt level 1
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           
   473                           ;psect for function _my_isr
   474  0781                     _my_isr:
   475  0781                     i1l638:
   476                           
   477                           ;main.c: 22:     if(PIR1bits.TXIF) {
   478  0781  080C               	movf	12,w	;volatile
   479  0782                     i1l33:	
   480                           ;main.c: 24:     }
   481                           
   482                           
   483                           ;main.c: 25:     if(PIR1bits.RCIF) {
   484  0782  1E8C               	btfss	12,5	;volatile
   485  0783  2F85               	goto	u1_21
   486  0784  2F86               	goto	u1_20
   487  0785                     u1_21:
   488  0785  2FA7               	goto	i1l36
   489  0786                     u1_20:
   490  0786                     i1l640:
   491                           
   492                           ;main.c: 26:         rx_data[i] = RCREG;
   493  0786  081A               	movf	26,w	;volatile
   494  0787  00F6               	movwf	??_my_isr
   495  0788  0874               	movf	_i,w
   496  0789  3E71               	addlw	(low (_rx_data| 0))& (0+255)
   497  078A  0084               	movwf	4
   498  078B  0876               	movf	??_my_isr,w
   499  078C  0080               	movwf	0
   500                           
   501                           ;main.c: 27:         TXREG = rx_data[i];
   502  078D  0874               	movf	_i,w
   503  078E  3E71               	addlw	(low (_rx_data| 0))& (0+255)
   504  078F  0084               	movwf	4
   505  0790  0800               	movf	0,w
   506  0791  0099               	movwf	25	;volatile
   507  0792                     i1l642:
   508                           
   509                           ;main.c: 28:         TXSTAbits.TXEN = 1;
   510  0792  1683               	bsf	3,5	;RP0=1, select bank1
   511  0793  1303               	bcf	3,6	;RP1=0, select bank1
   512  0794  1698               	bsf	24,5	;volatile
   513  0795                     i1l644:
   514                           
   515                           ;main.c: 29:         if(i >= 3) {
   516  0795  0875               	movf	_i+1,w
   517  0796  3A80               	xorlw	128
   518  0797  00FF               	movwf	btemp+1
   519  0798  3080               	movlw	128
   520  0799  027F               	subwf	btemp+1,w
   521  079A  1D03               	skipz
   522  079B  2F9E               	goto	u2_25
   523  079C  3003               	movlw	3
   524  079D  0274               	subwf	_i,w
   525  079E                     u2_25:
   526  079E  1C03               	skipc
   527  079F  2FA1               	goto	u2_21
   528  07A0  2FA2               	goto	u2_20
   529  07A1                     u2_21:
   530  07A1  2FA7               	goto	i1l36
   531  07A2                     u2_20:
   532  07A2                     i1l646:
   533                           
   534                           ;main.c: 30:             TXSTAbits.TXEN = 0;
   535  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   536  07A3  1303               	bcf	3,6	;RP1=0, select bank1
   537  07A4  1298               	bcf	24,5	;volatile
   538  07A5                     i1l648:
   539                           
   540                           ;main.c: 31:             i = 0;
   541  07A5  01F4               	clrf	_i
   542  07A6  01F5               	clrf	_i+1
   543  07A7                     i1l36:
   544  07A7  087A               	movf	??_my_isr+4,w
   545  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   546  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   547  07AA  00FF               	movwf	btemp+1
   548  07AB  0879               	movf	??_my_isr+3,w
   549  07AC  008A               	movwf	10
   550  07AD  0878               	movf	??_my_isr+2,w
   551  07AE  0084               	movwf	4
   552  07AF  0E77               	swapf	??_my_isr+1,w
   553  07B0  0083               	movwf	3
   554  07B1  0EFE               	swapf	btemp,f
   555  07B2  0E7E               	swapf	btemp,w
   556  07B3  0009               	retfie
   557  07B4                     __end_of_my_isr:
   558  007E                     btemp	set	126	;btemp
   559  007E                     wtemp0	set	126
   560                           
   561                           	psect	intentry
   562  0004                     __pintentry:	
   563                           ;incstack = 0
   564                           ; Regs used in _my_isr: [wreg-fsr0h+status,2+status,0+btemp+1]
   565                           
   566  0004                     interrupt_function:
   567  007E                     saved_w	set	btemp
   568  0004  00FE               	movwf	btemp
   569  0005  0E03               	swapf	3,w
   570  0006  00F7               	movwf	??_my_isr+1
   571  0007  0804               	movf	4,w
   572  0008  00F8               	movwf	??_my_isr+2
   573  0009  080A               	movf	10,w
   574  000A  00F9               	movwf	??_my_isr+3
   575  000B  1283               	bcf	3,5	;RP0=0, select bank0
   576  000C  1303               	bcf	3,6	;RP1=0, select bank0
   577  000D  087F               	movf	btemp+1,w
   578  000E  00FA               	movwf	??_my_isr+4
   579  000F  120A  118A  2F81   	ljmp	_my_isr
   580                           
   581                           	psect	config
   582                           
   583                           ;Config register CONFIG @ 0x2007
   584                           ;	Oscillator Selection bits
   585                           ;	FOSC = HS, HS oscillator
   586                           ;	Watchdog Timer Enable bit
   587                           ;	WDTE = OFF, WDT disabled
   588                           ;	Power-up Timer Enable bit
   589                           ;	PWRTE = OFF, PWRT disabled
   590                           ;	Brown-out Reset Enable bit
   591                           ;	BOREN = OFF, BOR disabled
   592                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   593                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   594                           ;	Data EEPROM Memory Code Protection bit
   595                           ;	CPD = OFF, Data EEPROM code protection off
   596                           ;	Flash Program Memory Write Enable bits
   597                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   598                           ;	In-Circuit Debugger Mode bit
   599                           ;	DEBUG = 0x1, unprogrammed default
   600                           ;	Flash Program Memory Code Protection bit
   601                           ;	CP = OFF, Code protection off
   602  2007                     	org	8199
   603  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      5      10
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr                                               5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      5       A       1       76.9%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 28 23:42:14 2021

                      _i 0074                        pc 0002                       u30 07D7  
                     u31 07D6                       u40 07E1                       u41 07E0  
                     fsr 0004                      l650 07B4                      l660 07C2  
                    l652 07BA                      l670 07CB                      l662 07C3  
                    l654 07BB                      l680 07D7                      l672 07CC  
                    l664 07C4                      l656 07BC                      l682 07DB  
                    l674 07CD                      l666 07C7                      l658 07BF  
                    l684 07E1                      l676 07CE                      l668 07C8  
                    l678 07D1                      fsr0 0004                      indf 0000  
                   i1l33 0782                     i1l36 07A7                     u1_20 0786  
                   u1_21 0785                     u2_20 07A2                     u2_21 07A1  
                   u2_25 079E                     _main 07B4                     btemp 007E  
                   start 0012                    ?_main 0076                    i1l640 0786  
                  i1l642 0792                    i1l644 0795                    i1l646 07A2  
                  i1l638 0781                    i1l648 07A5                    _RCREG 001A  
                  _SPBRG 0099                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _TXREG 0019                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E9  
           __end_of_main 07E9                   ??_main 007B                   _my_isr 0781  
                 saved_w 007E  __end_of__initialization 07FC           __pcstackCOMMON 0076  
           __pidataBANK0 076D               __pmaintext 07B4               __pintentry 0004  
                ?_my_isr 0076                  __ptext1 0781          __size_of_my_isr 0033  
                _rx_data 0071                  _tx_data 0020     end_of_initialization 07FC  
              _RCSTAbits 0018                _TXSTAbits 0098           __end_of_my_isr 07B4  
    start_initialization 07E9               init_fetch0 075A              __pdataBANK0 0020  
               ??_my_isr 0076              __pbssCOMMON 0071                ___latbits 0002  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
          __size_of_main 0035               _INTCONbits 000B                 init_ram0 075E  
               intlevel1 0000  
