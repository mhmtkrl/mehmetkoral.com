

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 28 01:16:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0008                     _PORTD	set	8
   168  0001                     _TMR0	set	1
   169  000B                     _INTCONbits	set	11
   170  0088                     _TRISD	set	136
   171  0085                     _TRISA	set	133
   172  0081                     _OPTION_REGbits	set	129
   173  009F                     _ADCON1	set	159
   174                           
   175                           	psect	cinit
   176  000F                     start_initialization:	
   177                           ; #config settings
   178                           
   179  000F                     __initialization:
   180                           
   181                           ; Clear objects allocated to COMMON
   182  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   183  0010  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   184  0011                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  0011                     __end_of__initialization:
   188  0011  0183               	clrf	3
   189  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192  0073                     __pbssCOMMON:
   193  0073                     _i:
   194  0073                     	ds	2
   195                           
   196                           	psect	cstackCOMMON
   197  0070                     __pcstackCOMMON:
   198  0070                     ?_my_isr:
   199  0070                     ??_my_isr:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207  0070                     	ds	2
   208  0072                     ??_main:
   209                           
   210                           ; 1 bytes @ 0x2
   211  0072                     	ds	1
   212                           
   213                           	psect	maintext
   214  0015                     __pmaintext:	
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 24 in file "main.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2, status,0
   229 ;; Tracked objects:
   230 ;;		On entry : B00/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   234 ;;      Params:         0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0
   236 ;;      Temps:          1       0       0       0       0
   237 ;;      Totals:         1       0       0       0       0
   238 ;;Total ram usage:        1 bytes
   239 ;; Hardware stack levels required when called:    1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           
   248                           ;psect for function _main
   249  0015                     _main:
   250  0015                     l628:	
   251                           ;incstack = 0
   252                           ; Regs used in _main: [wreg+status,2+status,0]
   253                           
   254                           
   255                           ;main.c: 25:     ADCON1 |= 0x07;
   256  0015  3007               	movlw	7
   257  0016  00F2               	movwf	??_main
   258  0017  0872               	movf	??_main,w
   259  0018  1683               	bsf	3,5	;RP0=1, select bank1
   260  0019  1303               	bcf	3,6	;RP1=0, select bank1
   261  001A  049F               	iorwf	31,f	;volatile
   262  001B                     l630:
   263                           
   264                           ;main.c: 26:     OPTION_REGbits.T0CS = 1;
   265  001B  1681               	bsf	1,5	;volatile
   266  001C                     l632:
   267                           
   268                           ;main.c: 27:     TRISA = 0xFF;
   269  001C  30FF               	movlw	255
   270  001D  0085               	movwf	5	;volatile
   271  001E                     l634:
   272                           
   273                           ;main.c: 28:     OPTION_REGbits.T0SE = 1;
   274  001E  1601               	bsf	1,4	;volatile
   275  001F                     l636:
   276                           
   277                           ;main.c: 29:     OPTION_REGbits.PSA = 1;
   278  001F  1581               	bsf	1,3	;volatile
   279  0020                     l638:
   280                           
   281                           ;main.c: 30:     INTCONbits.TMR0IE = 1;
   282  0020  168B               	bsf	11,5	;volatile
   283  0021                     l640:
   284                           
   285                           ;main.c: 31:     INTCONbits.GIE = 1;
   286  0021  178B               	bsf	11,7	;volatile
   287  0022                     l642:
   288                           
   289                           ;main.c: 32:     TMR0 = 255;
   290  0022  30FF               	movlw	255
   291  0023  1283               	bcf	3,5	;RP0=0, select bank0
   292  0024  1303               	bcf	3,6	;RP1=0, select bank0
   293  0025  0081               	movwf	1	;volatile
   294  0026                     l644:
   295                           
   296                           ;main.c: 34:     TRISD = 0x00;
   297  0026  1683               	bsf	3,5	;RP0=1, select bank1
   298  0027  1303               	bcf	3,6	;RP1=0, select bank1
   299  0028  0188               	clrf	8	;volatile
   300  0029                     l646:
   301                           
   302                           ;main.c: 35:     PORTD = 0x00;
   303  0029  1283               	bcf	3,5	;RP0=0, select bank0
   304  002A  1303               	bcf	3,6	;RP1=0, select bank0
   305  002B  0188               	clrf	8	;volatile
   306  002C                     l648:
   307                           
   308                           ;main.c: 38:         PORTD = i;
   309  002C  0873               	movf	_i,w
   310  002D  0088               	movwf	8	;volatile
   311  002E  282C               	goto	l648
   312  002F  120A  118A  280C   	ljmp	start
   313  0032                     __end_of_main:
   314                           
   315                           	psect	text1
   316  0032                     __ptext1:	
   317 ;; *************** function _my_isr *****************
   318 ;; Defined at:
   319 ;;		line 16 in file "main.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0
   335 ;;      Temps:          2       0       0       0       0
   336 ;;      Totals:         2       0       0       0       0
   337 ;;Total ram usage:        2 bytes
   338 ;; Hardware stack levels used:    1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		Interrupt level 1
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           
   347                           ;psect for function _my_isr
   348  0032                     _my_isr:
   349  0032                     i1l622:
   350                           
   351                           ;main.c: 17:     if(INTCONbits.TMR0IF) {
   352  0032  1D0B               	btfss	11,2	;volatile
   353  0033  2835               	goto	u1_21
   354  0034  2836               	goto	u1_20
   355  0035                     u1_21:
   356  0035  2841               	goto	i1l22
   357  0036                     u1_20:
   358  0036                     i1l624:
   359                           
   360                           ;main.c: 18:         i++;
   361  0036  3001               	movlw	1
   362  0037  07F3               	addwf	_i,f
   363  0038  1803               	skipnc
   364  0039  0AF4               	incf	_i+1,f
   365  003A  3000               	movlw	0
   366  003B  07F4               	addwf	_i+1,f
   367                           
   368                           ;main.c: 19:         TMR0 = 255;
   369  003C  30FF               	movlw	255
   370  003D  1283               	bcf	3,5	;RP0=0, select bank0
   371  003E  1303               	bcf	3,6	;RP1=0, select bank0
   372  003F  0081               	movwf	1	;volatile
   373  0040                     i1l626:
   374                           
   375                           ;main.c: 20:         INTCONbits.TMR0IF = 0;
   376  0040  110B               	bcf	11,2	;volatile
   377  0041                     i1l22:
   378  0041  0871               	movf	??_my_isr+1,w
   379  0042  008A               	movwf	10
   380  0043  0E70               	swapf	??_my_isr,w
   381  0044  0083               	movwf	3
   382  0045  0EFE               	swapf	btemp,f
   383  0046  0E7E               	swapf	btemp,w
   384  0047  0009               	retfie
   385  0048                     __end_of_my_isr:
   386  007E                     btemp	set	126	;btemp
   387  007E                     wtemp0	set	126
   388                           
   389                           	psect	intentry
   390  0004                     __pintentry:	
   391                           ;incstack = 0
   392                           ; Regs used in _my_isr: [wreg]
   393                           
   394  0004                     interrupt_function:
   395  007E                     saved_w	set	btemp
   396  0004  00FE               	movwf	btemp
   397  0005  0E03               	swapf	3,w
   398  0006  00F0               	movwf	??_my_isr
   399  0007  080A               	movf	10,w
   400  0008  00F1               	movwf	??_my_isr+1
   401  0009  120A  118A  2832   	ljmp	_my_isr
   402                           
   403                           	psect	config
   404                           
   405                           ;Config register CONFIG @ 0x2007
   406                           ;	Oscillator Selection bits
   407                           ;	FOSC = HS, HS oscillator
   408                           ;	Watchdog Timer Enable bit
   409                           ;	WDTE = OFF, WDT disabled
   410                           ;	Power-up Timer Enable bit
   411                           ;	PWRTE = OFF, PWRT disabled
   412                           ;	Brown-out Reset Enable bit
   413                           ;	BOREN = OFF, BOR disabled
   414                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   415                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   416                           ;	Data EEPROM Memory Code Protection bit
   417                           ;	CPD = OFF, Data EEPROM code protection off
   418                           ;	Flash Program Memory Write Enable bits
   419                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   420                           ;	In-Circuit Debugger Mode bit
   421                           ;	DEBUG = 0x1, unprogrammed default
   422                           ;	Flash Program Memory Code Protection bit
   423                           ;	CP = OFF, Code protection off
   424  2007                     	org	8199
   425  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _my_isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 28 01:16:14 2021

                      _i 0073                      l630 001B                      l640 0021  
                    l632 001C                      l642 0022                      l634 001E  
                    l644 0026                      l636 001F                      l628 0015  
                    l646 0029                      l638 0020                      l648 002C  
                   i1l22 0041                     _TMR0 0001                     u1_20 0036  
                   u1_21 0035                     _main 0015                     btemp 007E  
                   start 000C                    ?_main 0070                    i1l622 0032  
                  i1l624 0036                    i1l626 0040                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0032                   ??_main 0072                   _ADCON1 009F  
                 _my_isr 0032                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070           _OPTION_REGbits 0081               __pmaintext 0015  
             __pintentry 0004                  ?_my_isr 0070                  __ptext1 0032  
        __size_of_my_isr 0016     end_of_initialization 0011           __end_of_my_isr 0048  
    start_initialization 000F                 ??_my_isr 0070              __pbssCOMMON 0073  
              ___latbits 0002        interrupt_function 0004            __size_of_main 001D  
             _INTCONbits 000B                 intlevel1 0000  
